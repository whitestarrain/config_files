#!/usr/bin/env bash

set -e

IMAGE_DIR_NAME="image"

echo_help() {
  echo "usage: $(basename "$0") [-d] markdown_file destination"
  echo '  -d, --image_dir_path       Default "image", A image folder relative to the destination path'
}

if [[ $# -lt 2 ]]; then
  echo_help
  exit 0
fi

while [ $# -gt 0 ]; do
  case $1 in
  -h | --help)
    echo_help
    exit
    ;;
  -d | --image_dir_name)
    IMAGE_DIR_NAME="$2"
    shift
    ;;
  *)
    break
    ;;
  esac
  shift
done

if [[ $# -ne 2 || -z $1 || -z $2 ]]; then
  echo_help
  exit
fi

markdown_file="$(realpath "$1")"
move_to="$(realpath "$2")"

if [[ ! -f "${markdown_file}" ]]; then
  echo "file ${markdown_file} does not exist"
  exit 1
fi

if [[ -f "${move_to}" ]]; then
  echo "${move_to} exists"
  exit 1
fi

if [[ -d "${move_to}" ]]; then
  move_to="$move_to/$(basename "$markdown_file")"
fi

echo -e move "$markdown_file to $move_to,"
echo "image dir path is: $IMAGE_DIR_NAME"

IFS=$'\n' read -r -d '' -a image_relation_paths < <(awk '{
      a = match($0,/!\[.*\]\((.*)\)/,capture_group);
      if(a!=0){
        print(capture_group[1])
      }
    }' "$markdown_file") || echo ""

declare -a move_commands

# move images
move_to_img_dir="$(dirname "$move_to")/$IMAGE_DIR_NAME"
if [[ ! -d "$move_to_img_dir" ]]; then
  mkdir -p "$move_to_img_dir"
fi
for image_relation_path in "${image_relation_paths[@]}"; do
  image_path="$(realpath "$(dirname "$markdown_file")/$image_relation_path")"
  image_name="$(basename "$image_path")"
  dest_image_path=$(realpath "$move_to_img_dir/$image_name")
  command="mv $image_path $dest_image_path"
  move_commands=("${move_commands[@]}" "$command")
done

# move markdown file
move_commands=("${move_commands[@]}" "mv $markdown_file $move_to")

printf "%s\n" "${move_commands[@]}"
echo -e "\n \e[0;31mThe above commands will be executed, do you want to continue?\e[m (yes/no):\n "
read -r -p " :" continue_flag

if [[ "${continue_flag}" != 'yes' ]]; then
  exit 0
fi

for cmd in "${move_commands[@]}"
do
  $cmd
done

